{"ast":null,"code":"\"use strict\";\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\PMS3-main\\\\node_modules\\\\react-native-dynamic-search-bar\\\\build\\\\dist\\\\SearchBar.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar React = tslib_1.__importStar(require(\"react\"));\n\nvar react_native_1 = require(\"react-native-web/dist/index\");\n\nvar react_native_spinkit_1 = tslib_1.__importDefault(require(\"react-native-spinkit\"));\n\nvar react_native_bounceable_1 = tslib_1.__importDefault(require(\"@freakycoder/react-native-bounceable\"));\n\nvar SearchBar_style_1 = tslib_1.__importStar(require(\"./SearchBar.style\"));\n\nvar defaultSearchIcon = require(\"./local-assets/search-icon.png\");\n\nvar whiteSearchIcon = require(\"./local-assets/search-icon-white.png\");\n\nvar defaultClearIcon = require(\"./local-assets/clear-icon.png\");\n\nvar whiteClearIcon = require(\"./local-assets/clear-icon-white.png\");\n\nvar SearchBar = function (_React$Component) {\n  _inherits(SearchBar, _React$Component);\n\n  var _super = _createSuper(SearchBar);\n\n  function SearchBar() {\n    var _this;\n\n    _classCallCheck(this, SearchBar);\n\n    _this = _super.apply(this, arguments);\n    _this.inputRef = null;\n\n    _this.handleSearchBarPress = function () {\n      var _this$inputRef;\n\n      (_this$inputRef = _this.inputRef) == null ? void 0 : _this$inputRef.focus();\n      _this.props.onPress && _this.props.onPress();\n    };\n\n    _this.handleOnClearPress = function () {\n      var _this$inputRef2;\n\n      (_this$inputRef2 = _this.inputRef) == null ? void 0 : _this$inputRef2.clear();\n      _this.props.onClearPress && _this.props.onClearPress();\n    };\n\n    _this.renderSpinner = function () {\n      var _this$props = _this.props,\n          _this$props$darkMode = _this$props.darkMode,\n          darkMode = _this$props$darkMode === void 0 ? false : _this$props$darkMode,\n          _this$props$spinnerSi = _this$props.spinnerSize,\n          spinnerSize = _this$props$spinnerSi === void 0 ? 15 : _this$props$spinnerSi,\n          _this$props$spinnerTy = _this$props.spinnerType,\n          spinnerType = _this$props$spinnerTy === void 0 ? \"FadingCircleAlt\" : _this$props$spinnerTy,\n          _this$props$spinnerCo = _this$props.spinnerColor,\n          spinnerColor = _this$props$spinnerCo === void 0 ? darkMode ? \"#fdfdfd\" : \"#19191a\" : _this$props$spinnerCo,\n          _this$props$spinnerVi = _this$props.spinnerVisibility,\n          spinnerVisibility = _this$props$spinnerVi === void 0 ? false : _this$props$spinnerVi;\n      return React.createElement(react_native_1.View, {\n        style: SearchBar_style_1.default.spinnerContainer,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      }, React.createElement(react_native_spinkit_1.default, {\n        size: spinnerSize,\n        type: spinnerType,\n        color: spinnerColor,\n        isVisible: spinnerVisibility,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    _this.renderSearchIcon = function () {\n      var _this$props2 = _this.props,\n          onSearchPress = _this$props2.onSearchPress,\n          _this$props2$darkMode = _this$props2.darkMode,\n          darkMode = _this$props2$darkMode === void 0 ? false : _this$props2$darkMode,\n          searchIconComponent = _this$props2.searchIconComponent,\n          searchIconImageStyle = _this$props2.searchIconImageStyle,\n          _this$props2$ImageCom = _this$props2.ImageComponent,\n          ImageComponent = _this$props2$ImageCom === void 0 ? react_native_1.Image : _this$props2$ImageCom,\n          _this$props2$searchIc = _this$props2.searchIconImageSource,\n          searchIconImageSource = _this$props2$searchIc === void 0 ? darkMode ? whiteSearchIcon : defaultSearchIcon : _this$props2$searchIc;\n      return React.createElement(react_native_bounceable_1.default, {\n        style: SearchBar_style_1.default.searchContainer,\n        onPress: onSearchPress,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }, searchIconComponent || React.createElement(ImageComponent, {\n        resizeMode: \"contain\",\n        source: searchIconImageSource,\n        style: [SearchBar_style_1.default.searchIconImageStyle, searchIconImageStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 34\n        }\n      }));\n    };\n\n    _this.renderTextInput = function () {\n      var _this$props3 = _this.props,\n          onBlur = _this$props3.onBlur,\n          onFocus = _this$props3.onFocus,\n          textInputStyle = _this$props3.textInputStyle,\n          _this$props3$darkMode = _this$props3.darkMode,\n          darkMode = _this$props3$darkMode === void 0 ? false : _this$props3$darkMode,\n          _this$props3$placehol = _this$props3.placeholder,\n          placeholder = _this$props3$placehol === void 0 ? \"Search here...\" : _this$props3$placehol;\n      return React.createElement(react_native_1.TextInput, _extends({\n        placeholderTextColor: darkMode ? \"#fdfdfd\" : \"#19191a\"\n      }, _this.props, {\n        onBlur: onBlur,\n        onFocus: onFocus,\n        ref: function ref(_ref) {\n          return _this.inputRef = _ref;\n        },\n        style: [SearchBar_style_1._textInputStyle(darkMode), textInputStyle],\n        placeholder: placeholder,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }));\n    };\n\n    _this.renderClearIcon = function () {\n      var _this$props4 = _this.props,\n          _this$props4$darkMode = _this$props4.darkMode,\n          darkMode = _this$props4$darkMode === void 0 ? false : _this$props4$darkMode,\n          clearIconComponent = _this$props4.clearIconComponent,\n          clearIconImageStyle = _this$props4.clearIconImageStyle,\n          _this$props4$ImageCom = _this$props4.ImageComponent,\n          ImageComponent = _this$props4$ImageCom === void 0 ? react_native_1.Image : _this$props4$ImageCom,\n          _this$props4$clearIco = _this$props4.clearIconImageSource,\n          clearIconImageSource = _this$props4$clearIco === void 0 ? darkMode ? whiteClearIcon : defaultClearIcon : _this$props4$clearIco;\n      return React.createElement(react_native_bounceable_1.default, {\n        bounceEffect: 0.8,\n        style: SearchBar_style_1.default.clearIconContainer,\n        onPress: _this.handleOnClearPress,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }, clearIconComponent || React.createElement(ImageComponent, {\n        resizeMode: \"contain\",\n        source: clearIconImageSource,\n        style: [SearchBar_style_1.default.clearIconImageStyle, clearIconImageStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 33\n        }\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          style = _this$props5.style,\n          _this$props5$darkMode = _this$props5.darkMode,\n          darkMode = _this$props5$darkMode === void 0 ? false : _this$props5$darkMode,\n          spinnerVisibility = _this$props5.spinnerVisibility;\n      return React.createElement(react_native_bounceable_1.default, _extends({}, this.props, {\n        bounceEffect: 0.97,\n        style: [SearchBar_style_1._container(darkMode), style],\n        onPress: this.handleSearchBarPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }), spinnerVisibility ? this.renderSpinner() : this.renderSearchIcon(), this.renderTextInput(), this.renderClearIcon());\n    }\n  }]);\n\n  return SearchBar;\n}(React.Component);\n\nexports.default = SearchBar;","map":{"version":3,"sources":["../../lib/SearchBar.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_native_1 = require(\"react-native\");\nconst react_native_spinkit_1 = tslib_1.__importDefault(require(\"react-native-spinkit\"));\nconst react_native_bounceable_1 = tslib_1.__importDefault(require(\"@freakycoder/react-native-bounceable\"));\n/**\n * ? Local Imports\n */\nconst SearchBar_style_1 = tslib_1.__importStar(require(\"./SearchBar.style\"));\nconst defaultSearchIcon = require(\"./local-assets/search-icon.png\");\nconst whiteSearchIcon = require(\"./local-assets/search-icon-white.png\");\nconst defaultClearIcon = require(\"./local-assets/clear-icon.png\");\nconst whiteClearIcon = require(\"./local-assets/clear-icon-white.png\");\nclass SearchBar extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.inputRef = null;\n        this.handleSearchBarPress = () => {\n            this.inputRef?.focus();\n            this.props.onPress && this.props.onPress();\n        };\n        this.handleOnClearPress = () => {\n            this.inputRef?.clear();\n            this.props.onClearPress && this.props.onClearPress();\n        };\n        /* -------------------------------------------------------------------------- */\n        /*                               Render Methods                               */\n        /* -------------------------------------------------------------------------- */\n        this.renderSpinner = () => {\n            const { darkMode = false, spinnerSize = 15, spinnerType = \"FadingCircleAlt\", spinnerColor = darkMode ? \"#fdfdfd\" : \"#19191a\", spinnerVisibility = false, } = this.props;\n            return (<react_native_1.View style={SearchBar_style_1.default.spinnerContainer}>\n        <react_native_spinkit_1.default size={spinnerSize} type={spinnerType} color={spinnerColor} isVisible={spinnerVisibility}/>\n      </react_native_1.View>);\n        };\n        this.renderSearchIcon = () => {\n            const { onSearchPress, darkMode = false, searchIconComponent, searchIconImageStyle, ImageComponent = react_native_1.Image, searchIconImageSource = darkMode ? whiteSearchIcon : defaultSearchIcon, } = this.props;\n            return (<react_native_bounceable_1.default style={SearchBar_style_1.default.searchContainer} onPress={onSearchPress}>\n        {searchIconComponent || (<ImageComponent resizeMode=\"contain\" source={searchIconImageSource} style={[SearchBar_style_1.default.searchIconImageStyle, searchIconImageStyle]}/>)}\n      </react_native_bounceable_1.default>);\n        };\n        this.renderTextInput = () => {\n            const { onBlur, onFocus, textInputStyle, darkMode = false, placeholder = \"Search here...\", } = this.props;\n            return (<react_native_1.TextInput placeholderTextColor={darkMode ? \"#fdfdfd\" : \"#19191a\"} {...this.props} onBlur={onBlur} onFocus={onFocus} ref={(ref) => (this.inputRef = ref)} style={[SearchBar_style_1._textInputStyle(darkMode), textInputStyle]} placeholder={placeholder}/>);\n        };\n        this.renderClearIcon = () => {\n            const { darkMode = false, clearIconComponent, clearIconImageStyle, ImageComponent = react_native_1.Image, clearIconImageSource = darkMode ? whiteClearIcon : defaultClearIcon, } = this.props;\n            return (<react_native_bounceable_1.default bounceEffect={0.8} style={SearchBar_style_1.default.clearIconContainer} onPress={this.handleOnClearPress}>\n        {clearIconComponent || (<ImageComponent resizeMode=\"contain\" source={clearIconImageSource} style={[SearchBar_style_1.default.clearIconImageStyle, clearIconImageStyle]}/>)}\n      </react_native_bounceable_1.default>);\n        };\n    }\n    render() {\n        const { style, darkMode = false, spinnerVisibility } = this.props;\n        return (<react_native_bounceable_1.default {...this.props} bounceEffect={0.97} style={[SearchBar_style_1._container(darkMode), style]} onPress={this.handleSearchBarPress}>\n        {spinnerVisibility ? this.renderSpinner() : this.renderSearchIcon()}\n        {this.renderTextInput()}\n        {this.renderClearIcon()}\n      </react_native_bounceable_1.default>);\n    }\n}\nexports.default = SearchBar;\n//# sourceMappingURL=SearchBar.js.map"]},"metadata":{},"sourceType":"script"}